fkVcf = read.vcfR("fkMcavNoClonesRenamed.vcf.gz")
fkGenlightPopDepth = vcfR2genlight(fkVcf, n.cores = 2) # Converts the vcf file into a file format that poppr uses the "genlight" format
locNames(fkGenlightPopDepth) = paste(fkVcf@fix[,1],fkVcf@fix[,2],sep="_")
popData = read.csv("inds2popsNoClonesPopDepth.csv") # Reads in population data for each sample
strata(fkGenlightPopDepth) = data.frame(popData)
setPop(fkGenlightPopDepth) = ~popdepth
setwd("/Users/student/Documents/GitHub/floridaKeysMcavSnp")
if (!require("pacman")) install.packages("pacman")
pacman::p_load("adegenet", "dendextend", "flextable", "ggdendro", "hierfstat", "Imap", "kableExtra", "paletteer", "patchwork", "officer", "poppr", "RColorBrewer", "reshape2", "StAMPP", "tidyverse", "vcfR", "vegan", "WGCNA")
fkVcf = read.vcfR("fkMcavNoClonesRenamed.vcf.gz")
fkGenlightPopDepth = vcfR2genlight(fkVcf, n.cores = 2) # Converts the vcf file into a file format that poppr uses the "genlight" format
locNames(fkGenlightPopDepth) = paste(fkVcf@fix[,1],fkVcf@fix[,2],sep="_")
popData = read.csv("inds2popsNoClonesPopDepth.csv") # Reads in population data for each sample
strata(fkGenlightPopDepth) = data.frame(popData)
setPop(fkGenlightPopDepth) = ~popdepth
set.seed(694)
fk.fst<-stamppFst(fkGenlight, nboots = 99, percent = 95, nclusters = 4) #99 permutations
fk.fst<-stamppFst(fkGenlightPopDepth, nboots = 99, percent = 95, nclusters = 4) #99 permutations
fk.fst$Fsts
fk.fst$Pvalues
# reads in fst matrix
snpFstMa = as.data.frame(fk.fst$Fsts)
names(snpFstMa) = pops
head(snpFstMa)
# reads in fst matrix
snpFstMa = as.data.frame(fk.fst$Fsts)
snpQMa = data.frame(fk.fst$Pvalues)
snpFst = melt(snpFstMa, id.vars = "Pop", value.name = "Fst", variable.name = "Pop2", na.rm = TRUE)
snpFstMa
# reads in fst matrix
snpFstMa = as.data.frame(fk.fst$Fsts)
names(snpFstMa) = pops
names(snpFstMa) = pops
row.names(snpFstMa) = pops
pops = c("TER-North-Mesophotic", "TER-North-Shallow", "TER-South-Mesophotic", "TER-South-Shallow", "Lower Keys-Shallow", "Lower Keys-Mesophotic", "Upper Keys-Mesophotic", "Upper Keys-Shallow")
# reads in fst matrix
snpFstMa = as.data.frame(fk.fst$Fsts)
names(snpFstMa) = pops
row.names(snpFstMa) = pops
snpFstMa$Pop = factor(row.names(snpFstMa), levels = unique(pops))
levels(snpFstMa$Pop)
snpQMa = data.frame(fk.fst$Pvalues)
names(snpQMa)= pops
row.names(snpQMa) = pops
snpQMa$Pop = factor(row.names(snpQMa), levels = unique(pops))
snpFst = melt(snpFstMa, id.vars = "Pop", value.name = "Fst", variable.name = "Pop2", na.rm = TRUE)
snpFst = snpFst[snpFst$Pop != snpFst$Pop2,]
snpFst$Fst = round(snpFst$Fst, 3)
snpFst = snpFst %>% mutate(Fst = replace(Fst, Fst < 0, 0))
head(snpFst)
snpQ = melt(snpQMa, id.vars = "Pop", value.name = "Pval", variable.name = "Pop2", na.rm = TRUE)
snpQ = snpQ[snpQ$Pop != snpQ$Pop2,]
snpQ$Qval = p.adjust(snpQ$Pval, method = "BH")
head(snpQ)
snpHeatmapA = ggplot(data = snpFst, aes(Pop, Pop2, fill = Fst))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "white", high = "red", midpoint = 0, limit = c(0, 0.22),
space = "Lab", name = expression(paste(italic("F")[ST])))+
geom_text(data = snpFst, aes(Pop, Pop2, label = Fst), color = ifelse(snpQ$Qval <= 0.05,"black", "darkgrey"), size = ifelse(snpQ$Qval < 0.05, 6, 5)) +
guides(fill=guide_colorbar(barwidth = 1, barheight = 12, title.position = "top", title.hjust = 0.5))+
scale_y_discrete(position = "right")+
scale_x_discrete(labels = str_wrap(snpFst$Pop, width = 6)) +
ggtitle("   SNP") +
theme_minimal()
snpHeatmap = snpHeatmapA + theme(
axis.text.x = element_text(vjust = 1, size = 16, hjust = 0.5, color = "black"),
axis.text.y = element_text(size = 16, color = "black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.justification = c(1, 0),
legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
plot.title = element_text(size = 16)
)
snpHeatmap
snpHeatmapA = ggplot(data = snpFst, aes(Pop, Pop2, fill = Fst))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "white", high = "red", midpoint = 0, limit = c(0, 0.1),
space = "Lab", name = expression(paste(italic("F")[ST])))+
geom_text(data = snpFst, aes(Pop, Pop2, label = Fst), color = ifelse(snpQ$Qval <= 0.05,"black", "darkgrey"), size = ifelse(snpQ$Qval < 0.05, 6, 5)) +
guides(fill=guide_colorbar(barwidth = 1, barheight = 12, title.position = "top", title.hjust = 0.5))+
scale_y_discrete(position = "right")+
scale_x_discrete(labels = str_wrap(snpFst$Pop, width = 6)) +
ggtitle("   SNP") +
theme_minimal()
snpHeatmap = snpHeatmapA + theme(
axis.text.x = element_text(vjust = 1, size = 16, hjust = 0.5, color = "black"),
axis.text.y = element_text(size = 16, color = "black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.justification = c(1, 0),
legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
plot.title = element_text(size = 16)
)
snpHeatmap
ggsave("snpHeatMap.tiff", plot = snpHeatmap, width = 34, height = 15, units = "cm", dpi = 300)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, fig.align = 'left')
knitr::opts_knit$set(root.dir = '../data')
options(width = 88, scipen = 4)
setwd("/Users/student/Documents/GitHub/floridaKeysMcavSnp/data")
if (!require("pacman")) install.packages("pacman")
pacman::p_load("adegenet", "dendextend", "flextable", "ggdendro", "hierfstat", "Imap", "kableExtra", "paletteer", "patchwork", "officer", "poppr", "RColorBrewer", "reshape2", "StAMPP", "tidyverse", "vcfR", "vegan", "WGCNA")
cloneBams = read.table("sampleList")[,1] # list of bam files
cloneMeta = read.csv("inds2pops.csv") # list of bams files and their populations
setwd("/Users/student/Documents/GitHub/floridaKeysMcavSnp/data")
pwd
wd()
cwd()
getwd()
setwd("./data")
getwd()
setwd("/Users/student/Documents/GitHub/floridaKeysMcavSnp/data")
getwd()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, fig.align = 'left')
knitr::opts_knit$set(root.dir = './data')
options(width = 88, scipen = 4)
getwd()
```{r setup, include=FALSE}
```{r setup, include=FALSE}
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, fig.align = 'left')
knitr::opts_knit$set(root.dir = './Users/student/Documents/GitHub/floridaKeysMcavSnp/data')
options(width = 88, scipen = 4)
```
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, fig.align = 'left')
knitr::opts_knit$set(root.dir = './data')
options(width = 88, scipen = 4)
setwd("./data")
getwd()
setwd("../data")
getwd()
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, fig.align = 'left')
knitr::opts_knit$set(root.dir = './data')
options(width = 88, scipen = 4)
getwd()
getwd()
getwd()
getwd()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, fig.align = 'left')
knitr::opts_knit$set(root.dir = '/Users/student/Documents/GitHub/floridaKeysMcavSnp/data')
options(width = 88, scipen = 4)
getwd()
getwd()
getwd()
getwd()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, fig.align = 'left')
knitr::opts_knit$set(root.dir = '/Users/student/Documents/GitHub/floridaKeysMcavSnp/data')
options(width = 88, scipen = 4)
setwd("../data")
getwd
getwd()
setwd('/Users/student/Documents/GitHub/floridaKeysMcavSnp/data')
getwd()
setwd(choose.dir())
setwd(choose.dir())
