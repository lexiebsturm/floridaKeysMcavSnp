upperKeys = fkMap +
coord_sf(xlim = c(-80.35, -80.15), ylim = c(25.1, 25.3)) +
scale_x_continuous(breaks = c(seq(-80.4, -80.0, by = .1))) +
scale_y_continuous(breaks = c(seq(25.0, 25.3, by = .1))) +
ggsn::scalebar(x.min = -80.35,
y.min = 25.105,
x.max = -80.16,
y.max = 25.3,
dist = 5, transform = TRUE,
model = "WGS84",
dist_unit="km", st.bottom=TRUE, st.dist=.03, st.size=3)+
theme(legend.position = "none",
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
upperKeys = fkMap +
coord_sf(xlim = c(-80.35, -80.15), ylim = c(25.1, 25.3)) +
scale_x_continuous(breaks = c(seq(-80.4, -80.0, by = .1))) +
scale_y_continuous(breaks = c(seq(25.0, 25.3, by = .1))) +
ggsn::scalebar(x.min = -80.35,
y.min = 25.105,
x.max = -80.16,
y.max = 25.3,
dist = 5, transform = TRUE,
model = "WGS84",
dist_unit="km", st.bottom=TRUE, st.dist=.03, st.size=3)+
theme(legend.position = "none",
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
lowerKeys = fkMap +
coord_sf(xlim = c(-81.7, -81.5), ylim = c(24.45, 24.65)) +
scale_x_continuous(breaks = c(seq(-81.7, -81.3, by = .1))) +
scale_y_continuous(breaks = c(seq(24.4, 24.7, by = .1))) +
ggsn::scalebar(x.min = -81.7,
y.min = 24.455,
x.max = -81.51,
y.max = 24.65,
dist = 5, transform = TRUE,
model = "WGS84",
dist_unit="km", st.bottom=TRUE, st.dist=.03, st.size=3)+
theme(legend.position = "none",
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
dryTortugas = fkMap +
coord_sf(xlim = c(-83.25, -82.95), ylim = c(24.45, 24.75)) +
scale_x_continuous(breaks = c(seq(-83.2, -82.9, by = .1))) +
scale_y_continuous(breaks = c(seq(24.4, 24.7, by = .1))) +
ggsn::scalebar(x.min = -83.25,
y.min = 24.455,
x.max = -82.96,
y.max = 24.75,
dist = 5, transform = TRUE,
model = "WGS84",
dist_unit="km", st.bottom=TRUE, st.dist=.03, st.size=3)+
theme(legend.position = "none",
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
fknmsMap = ggdraw() +
draw_plot(mainMap) +
draw_plot(upperKeys, x = .62, y = 0.125, width = 0.3, height = 0.3) +
draw_plot(lowerKeys, x = 0.25, y = 0.45, width = 0.3, height = 0.3) +
draw_plot(dryTortugas, x = 0.01, y = 0.6, width = 0.3, height = 0.3)
fknmsMap
fknmsMap
ggsave("../revisedFigures/fig1.tiff", plot=fknmsMap, height = 20, width = 30, unit = "cm", dpi = 300)
ggsave("../revisedFigures/fig1.eps", plot=fknmsMap, height = 20, width = 25, unit = "cm", dpi = 300)
snpMa = as.matrix(read.table("fkMcavNoClones.ibsMat"))
fkMds = cmdscale(snpMa, eig = TRUE, x.ret = TRUE)
# Determine percent variation captured on each axis
# Calculate the eigenvalues so later we can figure out % variation shown on each Principal Coordinate
fkSnpPcoaVar = round(fkMds$eig/sum(fkMds$eig)*100, 1)
fkSnpPcoaVar
# Format data to plot
fkSnpPcoaValues = fkMds$points
fkSnpPcoaValues
snpI2P = read.csv("inds2popsNoClones.csv") # 2-column tab-delimited table of individual assignments to populations; must be in the same order as samples in the bam list or vcf file.
row.names(snpI2P) = snpI2P[,1]
fkSnpPcoaValues=cbind(snpI2P, fkSnpPcoaValues)
fkSnpPcoaValues =as.data.frame(fkSnpPcoaValues, sample = rownames(fkSnpPcoaValues))
colnames(fkSnpPcoaValues)[5] <- "PCo1"
colnames(fkSnpPcoaValues)[6] <- "PCo2"
fkSnpPcoaValues
snpPCoA = merge(fkSnpPcoaValues, aggregate(cbind(mean.x=PCo1,mean.y=PCo2)~popsite, fkSnpPcoaValues, mean), by="popsite")
snpPCoA$depth=as.factor(snpPCoA$depth)
snpPCoA$depth = factor(snpPCoA$depth, levels(snpPCoA$depth)[c(2,1)])
# SNP PCoA biplot
fkSnpPcoaPlotA = ggplot(snpPCoA, aes(x = PCo1, y = PCo2, color = pop, fill = pop, shape = depth, linetype = depth))+
geom_hline(yintercept = 0, color = "gray90", size = 0.5) +
geom_vline(xintercept = 0, color = "gray90", size = 0.5) +
stat_ellipse(data = subset(snpPCoA, type = "t", geom = "polygon", alpha = 0.1)) + #ellipse
scale_linetype_manual(values=c(1,2), breaks=c("Shallow","Mesophotic"), name = "Depth Zone")+
geom_point(aes(x = PCo1, y = PCo2, shape = depth), size = 3, alpha = 0.3, show.legend = FALSE, guide=FALSE) + #individual's points indicated by circles
scale_shape_manual(values = c(21,25), breaks=c("Shallow","Mesophotic"), name = "Depth Zone") +
geom_point(aes(x = mean.x, y = mean.y, shape = depth), size = 5, color = "black") + #population centroids indicated by triangles
scale_fill_paletteer_d("LaCroixColoR::PassionFruit", breaks=c("TER-South","TER-North","Lower Keys", "Upper Keys"), name= "Population", labels = c("DTS", "DTN", "LK", "UK"))+
scale_color_paletteer_d("LaCroixColoR::PassionFruit", breaks=c("TER-South","TER-North","Lower Keys", "Upper Keys"), name = " Population", guide=FALSE) +
xlab(paste ("PCo 1 (", fkSnpPcoaVar[1],"%)", sep = "")) + #Prints percent variation explained by first axis
ylab(paste ("PCo 2 (", fkSnpPcoaVar[2],"%)", sep = "")) + #Prints percent variation explained by second axis
guides(shape = guide_legend(order = 2), linetype = guide_legend(order = 3), fill = guide_legend(override.aes = list(shape = 22, size = 4), order = 1))+
theme_bw()
fkSnpPcoaPlot = fkSnpPcoaPlotA +
theme(axis.title.x = element_text(color = "black", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.title.y = element_text(color = "black", size = 10),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
legend.position = "left",
panel.border = element_rect(color = "black", size = 1.2),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
fkSnpPcoaPlot
fkSnpPcoaPlot
ggsave("../revisedFigures/fig2.tiff", plot = fkSnpPcoaPlot, height = 5, width = 7, units = "in", dpi = 300)
ggsave("../revisedFigures/fig2.eps", plot = fkSnpPcoaPlot, height = 5, width = 7, units = "in", dpi = 300, device=cairo_ps, fallback_resolution = 600)
ggsave("../revisedFigures/fig2.eps", plot = fkSnpPcoaPlot, height = 5, width = 7, units = "in", dpi = 300, device=cairo_ps, fallback_resolution = 600)
fkVcf = read.vcfR("fkMcavNoClones.bcf")
fkGenlightPopDepth = vcfR2genlight(fkVcf, n.cores = 2) # Converts the vcf file into a file format that poppr uses the "genlight" format
locNames(fkGenlightPopDepth) = paste(fkVcf@fix[,1],fkVcf@fix[,2],sep="_")
popData = read.csv("inds2popsNoClonesPopDepth.csv") # Reads in population data for each sample
strata(fkGenlightPopDepth) = data.frame(popData)
setPop(fkGenlightPopDepth) = ~popdepth
amova <- poppr.amova(fkGenlightPopDepth, ~popdepth) #Runs AMOVA
amova
set.seed(1999)
amovasignif <- randtest(amova, nrepet = 99) #Calculates significance levels of the AMOVA with 99 permutations
amovasignif
plot(amovasignif)
fkGenlightPopDepth$pop=as.factor(fkGenlightPopDepth$pop)
fkGenlightPopDepth$pop = factor(fkGenlightPopDepth$pop, levels(fkGenlightPopDepth$pop)[c(4,3,2,1,5,6,8,7)])
set.seed(694)
fk.fst <- stamppFst(fkGenlightPopDepth, nboots = 99, percent = 95, nclusters = 4) #99 permutations
fk.fst$Fsts
fk.fst$Pvalues
# pca.1 <- glPca(fkGenlightPopDepth, nf=300, n.cores=1)
#
# # proportion of explained variance by first three axes
# pca.1$eig[1]/sum(pca.1$eig) # proportion of variation explained by 1st axis
# pca.1$eig[2]/sum(pca.1$eig) # proportion of variation explained by 2nd axis
# pca.1$eig[3]/sum(pca.1$eig) # proportion of variation explained by 3rd axis
#
# #####K-Means Clustering and DAPC
# grp <- find.clusters(fkGenlightPopDepth, max.n.clust=11, glPca = pca.1, perc.pca = 100, n.iter=1e6, n.start=1000)
pop.order <- c("TER-South-Shallow", "TER-South-Mesophotic",  "TER-North-Shallow", "TER-North-Mesophotic", "Lower Keys-Shallow", "Lower Keys-Mesophotic", "Upper Keys-Shallow", "Upper Keys-Mesophotic")
# reads in fst matrix
snpFstMa <- as.matrix(fk.fst$Fsts)
upperTriangle(snpFstMa, byrow=TRUE) <- lowerTriangle(snpFstMa)
snpFstMa <- snpFstMa[,pop.order] %>%
.[pop.order,]
snpFstMa[upper.tri(snpFstMa)] <- NA
snpFstMa <- as.data.frame(snpFstMa)
snpFstMa$Pop = factor(row.names(snpFstMa), levels = unique(pop.order))
snpQMa <- as.matrix(fk.fst$Pvalues)
upperTriangle(snpQMa, byrow=TRUE) <- lowerTriangle(snpQMa)
snpQMa <- snpQMa[,pop.order] %>%
.[pop.order,]
snpQMa[upper.tri(snpQMa)] <- NA
snpQMa <- as.data.frame(snpQMa)
snpQMa$Pop = factor(row.names(snpQMa), levels = unique(pop.order))
snpFstMa$Pop = factor(row.names(snpFstMa), levels = unique(pop.order))
snpFst = melt(snpFstMa, id.vars = "Pop", value.name = "Fst", variable.name = "Pop2", na.rm = TRUE)
snpFst = snpFst[snpFst$Pop != snpFst$Pop2,]
snpFst$Fst = round(snpFst$Fst, 3)
snpFst = snpFst %>% mutate(Fst = replace(Fst, Fst < 0, 0))
head(snpFst)
snpQ = melt(snpQMa, id.vars = "Pop", value.name = "Pval", variable.name = "Pop2", na.rm = TRUE)
snpQ = snpQ[snpQ$Pop != snpQ$Pop2,]
snpQ$Qval = p.adjust(snpQ$Pval, method = "BH")
head(snpQ)
snpHeatmapA = ggplot(data = snpFst, aes(Pop, Pop2, fill = Fst))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "white", high = "red", midpoint = 0, limit = c(0, 0.1),
space = "Lab", name = expression(paste(italic("F")[ST])))+
geom_text(data = snpFst, aes(Pop, Pop2, label = Fst), color = ifelse(snpQ$Qval <= 0.05,"black", "darkgrey"), size = ifelse(snpQ$Qval < 0.05, 6, 5), fontface = ifelse(snpQ$Qval <= 0.05, "bold", "plain")) +
guides(fill=guide_colorbar(barwidth = 1, barheight = 12, title.position = "top", title.hjust = 0.5))+
scale_y_discrete(position = "right", labels=c("DTS-Shallow", "DTS-Mesophotic", "DTN-Shallow","DTN-Mesophotic","LK-Shallow", "LK-Mesophotic", "UK-Shallow"))+
scale_x_discrete(labels = str_wrap(c("DTS-Mesophotic", "DTN-Shallow","DTN-Mesophotic","LK-Shallow", "LK-Mesophotic", "UK-Shallow", "UK-Mesophotic"), width = 6)) +
#ggtitle("   SNP") +
theme_minimal()
snpHeatmap = snpHeatmapA + theme(
axis.text.x = element_text(vjust = 1, size = 16, hjust = 0.5, color = "black"),
axis.text.y = element_text(size = 16, color = "black"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
plot.title = element_text(size = 16)
)
snpHeatmap
ggsave("../revisedFigures/fig3.tiff", plot = snpHeatmap, width = 34, height = 15, units = "cm", dpi = 300)
ggsave("../revisedFigures/fig3.eps", plot = snpHeatmap, width = 34, height = 15, units = "cm", dpi = 300)
###Cluster K=2
colPal2=c("#FFFFCC", "#41B6C4")
fkK2 <- read.csv("fkMcavNoClones_k2.csv")
fkK2$sample = factor(fkK2$sample, levels = fkK2$sample[order(-fkK2$cluster2)])
mdat2 = melt(fkK2, id.vars=c("sample", "pop"), variable.name="Ancestry", value.name="Fraction")
mdat2$pop=as.factor(mdat2$pop)
mdat2$pop = factor(mdat2$pop, levels(mdat2$pop)[c(6,5,4,3,2,1,8,7)])
levels(mdat2$pop) = c("DTS-Shallow", "DTS-Mesophotic", "DTN-Shallow", "DTN-Mesophotic", "LK-Shallow", "LK-Mesophotic", "UK-Shallow", "UK-Mesophotic")
p2 = ggplot(mdat2, aes(x=sample, y=Fraction, fill=Ancestry, order=sample)) +
geom_bar(stat="identity", position="fill", width=1, colour="grey25") +
facet_grid(.~pop, scales = "free", switch = "x", space = "free") +
labs(x = "Population", y = "Ancestry") +
ggtitle("K=2") +
theme(plot.title = element_text(size=22),
panel.grid=element_blank(),
panel.background=element_rect(fill=NA, colour="grey25"),
panel.spacing.x=grid:::unit(0, "lines"),
panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
axis.text.x=element_blank(),
axis.text.y = element_text(size=14),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.x=element_blank(),
strip.background=element_blank(),
strip.text=element_blank(),
legend.key=element_blank(),
legend.position = "none",
legend.title = element_blank()) +
scale_x_discrete(expand=c(0, 0)) +
scale_y_continuous(expand=c(0, 0)) +
#scale_fill_manual(values = brewer.pal(name = "YlGnBu", n = 4), name = "Cluster") +
scale_fill_manual(values = colPal2, name = "Cluster") +
guides(fill=guide_legend(override.aes=list(colour=NULL)))
p2
###Cluster K=3
colPal3=c("#FFFFCC", "#41B6C4", "#225EA8")
#colPal3=c("#A1DAB4", "#41B6C4", "#225EA8")
fkK3 <- read.csv("fkMcavNoClones_k3.csv")
fkK3$sample = factor(fkK3$sample, levels = fkK3$sample[order(-fkK3$cluster2)])
mdat3 = melt(fkK3, id.vars=c("sample", "pop"), variable.name="Ancestry", value.name="Fraction")
mdat3$Ancestry = factor(mdat3$Ancestry, levels(mdat3$Ancestry)[c(1,3,2)])
mdat3$pop=as.factor(mdat3$pop)
mdat3$pop = factor(mdat3$pop, levels(mdat3$pop)[c(6,5,4,3,2,1,8,7)])
levels(mdat3$pop) = c("DTS-Shallow", "DTS-Mesophotic", "DTN-Shallow", "DTN-Mesophotic", "LK-Shallow", "LK-Mesophotic", "UK-Shallow", "UK-Mesophotic")
p3 = ggplot(mdat3, aes(x=sample, y=Fraction, fill=Ancestry, order=sample)) +
geom_bar(stat="identity", position="fill", width=1, colour="grey25") +
facet_grid(.~pop, scales = "free", switch = "x", space = "free") +
labs(x = "Population", y = "Ancestry") +
ggtitle("K=3") +
theme(plot.title = element_text(size=22),
panel.grid=element_blank(),
panel.background=element_rect(fill=NA, colour="grey25"),
panel.spacing.x=grid:::unit(0, "lines"),
panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
#axis.text.x=element_text(size=12, angle=90)
axis.text.x = element_blank(),
axis.title.x = element_text(size=22),
axis.ticks.x=element_blank(),
axis.text.y = element_text(size=14),
axis.title.y = element_blank(),
strip.background=element_blank(),
strip.text=element_text(size=20, angle=45),
legend.key=element_blank(),
legend.position = "none",
legend.title = element_blank()) +
scale_x_discrete(expand=c(0, 0)) +
scale_y_continuous(expand=c(0, 0)) +
scale_fill_manual(values = brewer.pal(name = "YlGnBu", n = 4), name = "Cluster") +
#scale_fill_manual(values = colPal3, name = "Cluster") +
guides(fill=guide_legend(override.aes=list(colour=NULL)))
p3
###Cluster K=4
# fkK4 <- read.csv("fkMcavNoClones_k4.csv")
#
# # cluster2Pops=fkK4 %>% filter(pop=="Upper Keys-Shallow")
# # cluster2Pops = cluster2Pops[order(cluster2Pops$pop, -cluster2Pops$cluster2),]
# #
# # cluster3Pops=fkK4 %>% filter(pop %in% c("TER-South-Mesophotic", "Lower Keys-Mesophotic", "Upper Keys-Mesophotic"))
# # cluster3Pops = cluster3Pops[order(cluster3Pops$pop, -cluster3Pops$cluster3),]
# #
# # cluster4Pops=fkK4 %>% filter(pop %in% c("TER-South-Shallow", "Lower Keys-Shallow",  "TER-North-Shallow", "TER-North-Mesophotic"))
# # cluster4Pops = cluster4Pops[order(cluster4Pops$pop, -cluster4Pops$cluster4),]
# #
# # snpStr = cluster2Pops %>% add_row(cluster3Pops) %>% add_row(cluster4Pops)
# # snpStr$sample <- factor(snpStr$sample, levels= snpStr$sample)
# # mdat4 = melt(snpStr, id.vars=c("sample", "pop"), variable.name="Ancestry", value.name="Fraction")
#
#
# fkK4$sample = factor(fkK4$sample, levels = fkK4$sample[order(-fkK4$cluster2)])
# mdat4 = melt(fkK4, id.vars=c("sample", "pop"), variable.name="Ancestry", value.name="Fraction")
# mdat4$Ancestry = factor(mdat4$Ancestry, levels(mdat4$Ancestry)[c(1,3,2,4)])
# mdat4$pop=as.factor(mdat4$pop)
# mdat4$pop = factor(mdat4$pop, levels(mdat4$pop)[c(6,5,4,3,2,1,8,7)])
# levels(mdat4$pop) = c("DTS-Shallow", "DTS-Mesophotic", "DTN-Shallow", "DTN-Mesophotic", "LK-Shallow", "LK-Mesophotic", "UK-Shallow", "UK-Mesophotic")
#
# p4 = ggplot(mdat4, aes(x=sample, y=Fraction, fill=Ancestry, order=sample)) +
#   geom_bar(stat="identity", position="fill", width=1, colour="grey25") +
#   facet_grid(.~pop, scales = "free", switch = "x", space = "free") +
#   labs(x = "Population", y = "Ancestry") +
#   ggtitle("K=4") +
#   theme(plot.title = element_text(size=22),
#   panel.grid=element_blank(),
#   panel.background=element_rect(fill=NA, colour="grey25"),
#   panel.spacing.x=grid:::unit(0, "lines"),
#   panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
#   #axis.text.x=element_text(size=12, angle=90)
#   axis.text.x = element_blank(),
#   axis.ticks.x=element_blank(),
#   axis.title.x = element_text(size=22),
#   axis.text.y = element_text(size=14),
#   axis.title.y = element_blank(),
#   strip.background=element_blank(),
#   strip.text=element_text(size=20, angle=45),
#   legend.key=element_blank(),
#   legend.position = "none",
#   legend.title = element_blank()) +
#   scale_x_discrete(expand=c(0, 0)) +
#   scale_y_continuous(expand=c(0, 0)) +
#   scale_fill_manual(values = brewer.pal(name = "YlGnBu", n = 4), name = "Cluster") +
#   guides(fill=guide_legend(override.aes=list(colour=NULL)))
# p4
combinedAdmix = (p2 / p3)
combinedAdmix
p2 = ggplot(mdat2, aes(x=sample, y=Fraction, fill=Ancestry, order=sample)) +
geom_bar(stat="identity", position="fill", width=1, colour="grey25") +
facet_grid(.~pop, scales = "free", switch = "x", space = "free") +
labs(x = "Population", y = "Ancestry") +
ggtitle("K=2") +
theme(plot.title = element_text(size=22),
panel.grid=element_blank(),
panel.background=element_rect(fill=NA, colour="grey25"),
panel.spacing.x=grid:::unit(0, "lines"),
panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
axis.text.x=element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.x=element_blank(),
strip.background=element_blank(),
strip.text=element_blank(),
legend.key=element_blank(),
legend.position = "none",
legend.title = element_blank()) +
scale_x_discrete(expand=c(0, 0)) +
scale_y_continuous(expand=c(0, 0)) +
#scale_fill_manual(values = brewer.pal(name = "YlGnBu", n = 4), name = "Cluster") +
scale_fill_manual(values = colPal2, name = "Cluster") +
guides(fill=guide_legend(override.aes=list(colour=NULL)))
p2
###Cluster K=3
colPal3=c("#FFFFCC", "#41B6C4", "#225EA8")
#colPal3=c("#A1DAB4", "#41B6C4", "#225EA8")
fkK3 <- read.csv("fkMcavNoClones_k3.csv")
fkK3$sample = factor(fkK3$sample, levels = fkK3$sample[order(-fkK3$cluster2)])
mdat3 = melt(fkK3, id.vars=c("sample", "pop"), variable.name="Ancestry", value.name="Fraction")
mdat3$Ancestry = factor(mdat3$Ancestry, levels(mdat3$Ancestry)[c(1,3,2)])
mdat3$pop=as.factor(mdat3$pop)
mdat3$pop = factor(mdat3$pop, levels(mdat3$pop)[c(6,5,4,3,2,1,8,7)])
levels(mdat3$pop) = c("DTS-Shallow", "DTS-Mesophotic", "DTN-Shallow", "DTN-Mesophotic", "LK-Shallow", "LK-Mesophotic", "UK-Shallow", "UK-Mesophotic")
p3 = ggplot(mdat3, aes(x=sample, y=Fraction, fill=Ancestry, order=sample)) +
geom_bar(stat="identity", position="fill", width=1, colour="grey25") +
facet_grid(.~pop, scales = "free", switch = "x", space = "free") +
labs(x = "Population", y = "Ancestry") +
ggtitle("K=3") +
theme(plot.title = element_text(size=22),
panel.grid=element_blank(),
panel.background=element_rect(fill=NA, colour="grey25"),
panel.spacing.x=grid:::unit(0, "lines"),
panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
#axis.text.x=element_text(size=12, angle=90)
axis.text.x = element_blank(),
axis.title.x = element_text(size=22),
axis.ticks.x=element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
strip.background=element_blank(),
strip.text=element_text(size=20, angle=45),
legend.key=element_blank(),
legend.position = "none",
legend.title = element_blank()) +
scale_x_discrete(expand=c(0, 0)) +
scale_y_continuous(expand=c(0, 0)) +
scale_fill_manual(values = brewer.pal(name = "YlGnBu", n = 4), name = "Cluster") +
#scale_fill_manual(values = colPal3, name = "Cluster") +
guides(fill=guide_legend(override.aes=list(colour=NULL)))
p3
combinedAdmix = (p2 / p3)
combinedAdmix
p2 = ggplot(mdat2, aes(x=sample, y=Fraction, fill=Ancestry, order=sample)) +
geom_bar(stat="identity", position="fill", width=1, colour="grey25") +
facet_grid(.~pop, scales = "free", switch = "x", space = "free") +
labs(x = "Population", y = "Ancestry") +
ggtitle("K=2") +
theme(plot.title = element_text(size=22),
panel.grid=element_blank(),
panel.background=element_rect(fill=NA, colour="grey25"),
panel.spacing.x=grid:::unit(0, "lines"),
panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
axis.text.x=element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
strip.background=element_blank(),
strip.text=element_blank(),
legend.key=element_blank(),
legend.position = "none",
legend.title = element_blank()) +
scale_x_discrete(expand=c(0, 0)) +
scale_y_continuous(expand=c(0, 0)) +
#scale_fill_manual(values = brewer.pal(name = "YlGnBu", n = 4), name = "Cluster") +
scale_fill_manual(values = colPal2, name = "Cluster") +
guides(fill=guide_legend(override.aes=list(colour=NULL)))
p2
###Cluster K=3
colPal3=c("#FFFFCC", "#41B6C4", "#225EA8")
#colPal3=c("#A1DAB4", "#41B6C4", "#225EA8")
fkK3 <- read.csv("fkMcavNoClones_k3.csv")
fkK3$sample = factor(fkK3$sample, levels = fkK3$sample[order(-fkK3$cluster2)])
mdat3 = melt(fkK3, id.vars=c("sample", "pop"), variable.name="Ancestry", value.name="Fraction")
mdat3$Ancestry = factor(mdat3$Ancestry, levels(mdat3$Ancestry)[c(1,3,2)])
mdat3$pop=as.factor(mdat3$pop)
mdat3$pop = factor(mdat3$pop, levels(mdat3$pop)[c(6,5,4,3,2,1,8,7)])
levels(mdat3$pop) = c("DTS-Shallow", "DTS-Mesophotic", "DTN-Shallow", "DTN-Mesophotic", "LK-Shallow", "LK-Mesophotic", "UK-Shallow", "UK-Mesophotic")
p3 = ggplot(mdat3, aes(x=sample, y=Fraction, fill=Ancestry, order=sample)) +
geom_bar(stat="identity", position="fill", width=1, colour="grey25") +
facet_grid(.~pop, scales = "free", switch = "x", space = "free") +
labs(x = "Population", y = "Ancestry") +
ggtitle("K=3") +
theme(plot.title = element_text(size=22),
panel.grid=element_blank(),
panel.background=element_rect(fill=NA, colour="grey25"),
panel.spacing.x=grid:::unit(0, "lines"),
panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
#axis.text.x=element_text(size=12, angle=90)
axis.text.x = element_blank(),
axis.title.x = element_text(size=22),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
strip.background=element_blank(),
strip.text=element_text(size=20, angle=45),
legend.key=element_blank(),
legend.position = "none",
legend.title = element_blank()) +
scale_x_discrete(expand=c(0, 0)) +
scale_y_continuous(expand=c(0, 0)) +
scale_fill_manual(values = brewer.pal(name = "YlGnBu", n = 4), name = "Cluster") +
#scale_fill_manual(values = colPal3, name = "Cluster") +
guides(fill=guide_legend(override.aes=list(colour=NULL)))
p3
###Cluster K=4
# fkK4 <- read.csv("fkMcavNoClones_k4.csv")
#
# # cluster2Pops=fkK4 %>% filter(pop=="Upper Keys-Shallow")
# # cluster2Pops = cluster2Pops[order(cluster2Pops$pop, -cluster2Pops$cluster2),]
# #
# # cluster3Pops=fkK4 %>% filter(pop %in% c("TER-South-Mesophotic", "Lower Keys-Mesophotic", "Upper Keys-Mesophotic"))
# # cluster3Pops = cluster3Pops[order(cluster3Pops$pop, -cluster3Pops$cluster3),]
# #
# # cluster4Pops=fkK4 %>% filter(pop %in% c("TER-South-Shallow", "Lower Keys-Shallow",  "TER-North-Shallow", "TER-North-Mesophotic"))
# # cluster4Pops = cluster4Pops[order(cluster4Pops$pop, -cluster4Pops$cluster4),]
# #
# # snpStr = cluster2Pops %>% add_row(cluster3Pops) %>% add_row(cluster4Pops)
# # snpStr$sample <- factor(snpStr$sample, levels= snpStr$sample)
# # mdat4 = melt(snpStr, id.vars=c("sample", "pop"), variable.name="Ancestry", value.name="Fraction")
#
#
# fkK4$sample = factor(fkK4$sample, levels = fkK4$sample[order(-fkK4$cluster2)])
# mdat4 = melt(fkK4, id.vars=c("sample", "pop"), variable.name="Ancestry", value.name="Fraction")
# mdat4$Ancestry = factor(mdat4$Ancestry, levels(mdat4$Ancestry)[c(1,3,2,4)])
# mdat4$pop=as.factor(mdat4$pop)
# mdat4$pop = factor(mdat4$pop, levels(mdat4$pop)[c(6,5,4,3,2,1,8,7)])
# levels(mdat4$pop) = c("DTS-Shallow", "DTS-Mesophotic", "DTN-Shallow", "DTN-Mesophotic", "LK-Shallow", "LK-Mesophotic", "UK-Shallow", "UK-Mesophotic")
#
# p4 = ggplot(mdat4, aes(x=sample, y=Fraction, fill=Ancestry, order=sample)) +
#   geom_bar(stat="identity", position="fill", width=1, colour="grey25") +
#   facet_grid(.~pop, scales = "free", switch = "x", space = "free") +
#   labs(x = "Population", y = "Ancestry") +
#   ggtitle("K=4") +
#   theme(plot.title = element_text(size=22),
#   panel.grid=element_blank(),
#   panel.background=element_rect(fill=NA, colour="grey25"),
#   panel.spacing.x=grid:::unit(0, "lines"),
#   panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
#   #axis.text.x=element_text(size=12, angle=90)
#   axis.text.x = element_blank(),
#   axis.ticks.x=element_blank(),
#   axis.title.x = element_text(size=22),
#   axis.text.y = element_text(size=14),
#   axis.title.y = element_blank(),
#   strip.background=element_blank(),
#   strip.text=element_text(size=20, angle=45),
#   legend.key=element_blank(),
#   legend.position = "none",
#   legend.title = element_blank()) +
#   scale_x_discrete(expand=c(0, 0)) +
#   scale_y_continuous(expand=c(0, 0)) +
#   scale_fill_manual(values = brewer.pal(name = "YlGnBu", n = 4), name = "Cluster") +
#   guides(fill=guide_legend(override.aes=list(colour=NULL)))
# p4
combinedAdmix = (p2 / p3)
combinedAdmix
ggsave("../revisedfigures/fig4.tiff", plot = combinedAdmix, width = 60, height = 35, units = "cm", dpi = 300)
ggsave("../revisedfigures/fig4.tiff", plot = combinedAdmix, width = 60, height = 35, units = "cm", dpi = 300)
ggsave("../revisedfigures/fig4.eps", plot = combinedAdmix, width = 60, height = 35, units = "cm", dpi = 300)
