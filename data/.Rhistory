#gssProf$sample = factor(gssProf$sample, levels = gssProf$sample[order(gssProf$otu)])
#gssTest = gssProf %>% arrange(site,depth_zone_m,otu,count)
#Construct bar plot
its2ProfsPlotA = ggplot(gssTest, aes(x = sample, y = count, fill = factor(otu))) +
geom_bar(position = "stack", stat = "identity", color = "black", size = 0.25) +
ylab("Proportion") +
scale_fill_paletteer_d("dichromat::BrowntoBlue.12")+
labs(fill = expression(paste(italic("ITS2"), " type profile"))) +
guides(fill = guide_legend(ncol = 2, reverse = FALSE)) +
facet_grid(depth_zone_m ~ site, scales = "free_x") + #faceting plots by Depth and Site
theme_bw()
its2ProfsPlot = its2ProfsPlotA +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom",
legend.title = element_text(color = "black", size = 12, hjust = 0.5, angle = 90),
legend.text = element_text(color = "black", size = 10),
legend.key = element_blank(),
legend.key.size = unit(0.75,"line"),
legend.background = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_blank(),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12),
strip.background = element_rect(fill = "white", size = 0.9)
)
its2ProfsPlot
its2Profs = read.csv("mxIts2ProfCounts.csv", header = TRUE, check.names = FALSE)
head(its2Profs)
its2Profs$depth_zone_m = factor(its2Profs$depth_zone_m, levels = c("10", "15", "25", "35"))
levels(its2Profs$depth_zone_m)
its2Profs$site = factor(its2Profs$site, levels(its2Profs$site)[c(1,2)])
its2Profs = its2Profs[order(its2Profs$site, its2Profs$depth_zone_m), ]
head(its2Profs)
sampleCounts = plyr::count(its2Profs, c('site','depth_zone_m'))
meltedList = reshape2::melt(lapply(sampleCounts$freq,function(x){c(1:x)}))
its2Profs$barPlotOrder = meltedList$value
its2Profs=its2Profs[c(1,ncol(its2Profs),2:(ncol(its2Profs)-1))]
its2ProfsTransposed = t(its2Profs[, 10:length(its2Profs[1, ])])
its2ProfsList = DGEList(counts = its2ProfsTransposed)
head(its2ProfsList$samples)
its2ProfsNorm =  calcNormFactors(its2ProfsList, method = "TMM")
head(its2ProfsNorm$samples)
its2TMM = t(cpm(its2ProfsNorm, normalized.lib.sizes = TRUE))
its2ProfsNorm = cbind(its2Profs[,c(1:9)], its2TMM)
#Prepping for bar plot
colOrder2 = order(colSums(its2ProfsNorm[10:length(its2ProfsNorm[1,])]), decreasing = TRUE)+9 #Add the number of columns of metadata
its2ProfsPerc = cbind(its2ProfsNorm[,c(1:9)],its2ProfsNorm[,c(colOrder2)])
its2ProfsPerc$sum = apply(its2ProfsPerc[, c(10:length(its2ProfsPerc[1,]))], 1, function(x) {
sum(x, na.rm = T)
})
its2ProfsPerc = cbind(its2ProfsPerc[, c(1:9)], (its2ProfsPerc[, c(10:(ncol(its2ProfsPerc)-1))]
/ its2ProfsPerc$sum))
head(its2ProfsPerc)
apply(its2ProfsPerc[, c(10:(ncol(its2ProfsPerc)))], 1, function(x) {
sum(x, na.rm = T)
})
head(its2ProfsPerc)
gssProf = otuStack(its2ProfsPerc, count.columns = c(10:length(its2ProfsPerc[1, ])),
condition.columns = c(1:9)) # remove summ rows
gssProf = gssProf %>% filter(otu != "summ") %>% droplevels()
levels(gssProf$otu)
levels(gssProf$depth_zone_m)
levels(gssProf$depth_zone_m) = c("10 m", "15 m", "25 m", "35 m")
levels(gssProf$site)
levels(gssProf$site) = c("Alacranes", "Bajos del Norte")
levels(gssProf$depth_zone_m)
levels(gssProf$site)
#gssProf$sample = factor(gssProf$sample, levels = gssProf$sample[order(gssProf$otu)])
#gssTest = gssProf %>% arrange(site,depth_zone_m,otu,count)
#Construct bar plot
its2ProfsPlotA = ggplot(gssTest, aes(x = sample, y = count, fill = factor(otu))) +
geom_bar(position = "stack", stat = "identity", color = "black", size = 0.25) +
ylab("Proportion") +
scale_fill_paletteer_d("dichromat::BrowntoBlue.12")+
labs(fill = expression(paste(italic("ITS2"), " type profile"))) +
guides(fill = guide_legend(ncol = 2, reverse = FALSE)) +
facet_grid(depth_zone_m ~ site, scales = "free_x") + #faceting plots by Depth and Site
theme_bw()
its2ProfsPlot = its2ProfsPlotA +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom",
legend.title = element_text(color = "black", size = 12, hjust = 0.5, angle = 90),
legend.text = element_text(color = "black", size = 10),
legend.key = element_blank(),
legend.key.size = unit(0.75,"line"),
legend.background = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_blank(),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12),
strip.background = element_rect(fill = "white", size = 0.9)
)
its2ProfsPlot
###############################ITS2###################################################
its2Profs = read.csv("mxIts2ProfCounts.csv", header = TRUE, check.names = FALSE)
head(its2Profs)
its2Profs$depth_zone_m = factor(its2Profs$depth_zone_m, levels = c("10", "15", "25", "35"))
levels(its2Profs$depth_zone_m)
its2Profs$site = factor(its2Profs$site, levels(its2Profs$site)[c(1,2)])
its2Profs = its2Profs[order(its2Profs$site, its2Profs$depth_zone_m), ]
head(its2Profs)
sampleCounts = plyr::count(its2Profs, c('site','depth_zone_m'))
meltedList = reshape2::melt(lapply(sampleCounts$freq,function(x){c(1:x)}))
its2Profs$barPlotOrder = meltedList$value
its2Profs=its2Profs[c(1,ncol(its2Profs),2:(ncol(its2Profs)-1))]
its2ProfsTransposed = t(its2Profs[, 10:length(its2Profs[1, ])])
its2ProfsList = DGEList(counts = its2ProfsTransposed)
head(its2ProfsList$samples)
its2ProfsNorm =  calcNormFactors(its2ProfsList, method = "TMM")
head(its2ProfsNorm$samples)
its2TMM = t(cpm(its2ProfsNorm, normalized.lib.sizes = TRUE))
its2ProfsNorm = cbind(its2Profs[,c(1:9)], its2TMM)
#Prepping for bar plot
colOrder2 = order(colSums(its2ProfsNorm[10:length(its2ProfsNorm[1,])]), decreasing = TRUE)+9 #Add the number of columns of metadata
its2ProfsPerc = cbind(its2ProfsNorm[,c(1:9)],its2ProfsNorm[,c(colOrder2)])
its2ProfsPerc$sum = apply(its2ProfsPerc[, c(10:length(its2ProfsPerc[1,]))], 1, function(x) {
sum(x, na.rm = T)
})
its2ProfsPerc = cbind(its2ProfsPerc[, c(1:9)], (its2ProfsPerc[, c(10:(ncol(its2ProfsPerc)-1))]
/ its2ProfsPerc$sum))
head(its2ProfsPerc)
apply(its2ProfsPerc[, c(10:(ncol(its2ProfsPerc)))], 1, function(x) {
sum(x, na.rm = T)
})
head(its2ProfsPerc)
gssProf = otuStack(its2ProfsPerc, count.columns = c(10:length(its2ProfsPerc[1, ])),
condition.columns = c(1:9)) # remove summ rows
gssProf = gssProf %>% filter(otu != "summ") %>% droplevels()
levels(gssProf$otu)
levels(gssProf$depth_zone_m)
levels(gssProf$depth_zone_m) = c("10 m", "15 m", "25 m", "35 m")
levels(gssProf$site)
levels(gssProf$site) = c("Alacranes", "Bajos del Norte")
levels(gssProf$depth_zone_m)
levels(gssProf$site)
its2ProfsPlotA = ggplot(gssTest, aes(x = sample, y = count, fill = factor(otu))) +
geom_bar(position = "stack", stat = "identity", color = "black", size = 0.25) +
ylab("Proportion") +
scale_fill_paletteer_d("dichromat::BrowntoBlue.12")+
labs(fill = expression(paste(italic("ITS2"), " type profile"))) +
guides(fill = guide_legend(ncol = 2, reverse = FALSE)) +
facet_grid(depth_zone_m ~ site, scales = "free_x") + #faceting plots by Depth and Site
theme_bw()
its2ProfsPlotA = ggplot(gssProf, aes(x = sample, y = count, fill = factor(otu))) +
geom_bar(position = "stack", stat = "identity", color = "black", size = 0.25) +
ylab("Proportion") +
scale_fill_paletteer_d("dichromat::BrowntoBlue.12")+
labs(fill = expression(paste(italic("ITS2"), " type profile"))) +
guides(fill = guide_legend(ncol = 2, reverse = FALSE)) +
facet_grid(depth_zone_m ~ site, scales = "free_x") + #faceting plots by Depth and Site
theme_bw()
its2ProfsPlot = its2ProfsPlotA +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom",
legend.title = element_text(color = "black", size = 12, hjust = 0.5, angle = 90),
legend.text = element_text(color = "black", size = 10),
legend.key = element_blank(),
legend.key.size = unit(0.75,"line"),
legend.background = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_blank(),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12),
strip.background = element_rect(fill = "white", size = 0.9)
)
its2ProfsPlot
###############################ITS2###################################################
its2Profs = read.csv("mxIts2ProfCounts.csv", header = TRUE, check.names = FALSE)
head(its2Profs)
its2Profs$depth_zone_m = factor(its2Profs$depth_zone_m, levels = c("10", "15", "25", "35"))
levels(its2Profs$depth_zone_m)
###############################ITS2###################################################
its2Profs = read.csv("mxIts2ProfCounts.csv", header = TRUE, check.names = FALSE)
head(its2Profs)
its2Profs$depth_zone_m = factor(its2Profs$depth_zone_m, levels = c("10", "15", "25", "35"))
levels(its2Profs$depth_zone_m)
its2Profs$site = factor(its2Profs$site, levels(its2Profs$site)[c(1,2)])
its2Profs = its2Profs[order(its2Profs$site, its2Profs$depth_zone_m), ]
head(its2Profs)
sampleCounts = plyr::count(its2Profs, c('site','depth_zone_m'))
meltedList = reshape2::melt(lapply(sampleCounts$freq,function(x){c(1:x)}))
its2Profs$barPlotOrder = meltedList$value
its2Profs=its2Profs[c(1,ncol(its2Profs),2:(ncol(its2Profs)-1))]
its2ProfsTransposed = t(its2Profs[, 10:length(its2Profs[1, ])])
its2ProfsList = DGEList(counts = its2ProfsTransposed)
head(its2ProfsList$samples)
its2ProfsNorm =  calcNormFactors(its2ProfsList, method = "TMM")
head(its2ProfsNorm$samples)
its2TMM = t(cpm(its2ProfsNorm, normalized.lib.sizes = TRUE))
its2ProfsNorm = cbind(its2Profs[,c(1:9)], its2TMM)
#Prepping for bar plot
colOrder2 = order(colSums(its2ProfsNorm[10:length(its2ProfsNorm[1,])]), decreasing = TRUE)+9 #Add the number of columns of metadata
its2ProfsPerc = cbind(its2ProfsNorm[,c(1:9)],its2ProfsNorm[,c(colOrder2)])
its2ProfsPerc$sum = apply(its2ProfsPerc[, c(10:length(its2ProfsPerc[1,]))], 1, function(x) {
sum(x, na.rm = T)
})
its2ProfsPerc = cbind(its2ProfsPerc[, c(1:9)], (its2ProfsPerc[, c(10:(ncol(its2ProfsPerc)-1))]
/ its2ProfsPerc$sum))
head(its2ProfsPerc)
apply(its2ProfsPerc[, c(10:(ncol(its2ProfsPerc)))], 1, function(x) {
sum(x, na.rm = T)
})
head(its2ProfsPerc)
gssProf = otuStack(its2ProfsPerc, count.columns = c(10:length(its2ProfsPerc[1, ])),
condition.columns = c(1:9)) # remove summ rows
gssProf = gssProf %>% filter(otu != "summ") %>% droplevels()
levels(gssProf$otu)
levels(gssProf$depth_zone_m)
levels(gssProf$depth_zone_m) = c("10 m", "15 m", "25 m", "35 m")
levels(gssProf$site)
levels(gssProf$site) = c("Alacranes", "Bajos del Norte")
levels(gssProf$depth_zone_m)
levels(gssProf$site)
its2ProfsPlotA = ggplot(gssProf, aes(x = sample, y = count, fill = factor(otu))) +
geom_bar(position = "stack", stat = "identity", color = "black", size = 0.25) +
ylab("Proportion") +
scale_fill_paletteer_d("dichromat::BrowntoBlue.12")+
labs(fill = expression(paste(italic("ITS2"), " type profile"))) +
guides(fill = guide_legend(ncol = 2, reverse = FALSE)) +
facet_grid(depth_zone_m ~ site, scales = "free_x") + #faceting plots by Depth and Site
theme_bw()
its2ProfsPlot = its2ProfsPlotA +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom",
legend.title = element_text(color = "black", size = 12, hjust = 0.5, angle = 90),
legend.text = element_text(color = "black", size = 10),
legend.key = element_blank(),
legend.key.size = unit(0.75,"line"),
legend.background = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_blank(),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12),
strip.background = element_rect(fill = "white", size = 0.9)
)
its2ProfsPlot
its2ProfsPlotA = ggplot(gssProf, aes(x = barPlotOrder, y = count, fill = factor(otu))) +
geom_bar(position = "stack", stat = "identity", color = "black", size = 0.25) +
ylab("Proportion") +
scale_fill_paletteer_d("dichromat::BrowntoBlue.12")+
labs(fill = expression(paste(italic("ITS2"), " type profile"))) +
guides(fill = guide_legend(ncol = 2, reverse = FALSE)) +
facet_grid(depth_zone_m ~ site, scales = "free_x") + #faceting plots by Depth and Site
theme_bw()
its2ProfsPlot = its2ProfsPlotA +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom",
legend.title = element_text(color = "black", size = 12, hjust = 0.5, angle = 90),
legend.text = element_text(color = "black", size = 10),
legend.key = element_blank(),
legend.key.size = unit(0.75,"line"),
legend.background = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_blank(),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12),
strip.background = element_rect(fill = "white", size = 0.9)
)
its2ProfsPlot
col.names(its2ProfsPlot)
colnames(its2ProfsPlot)
colnames(its2ProfsPlot)
its2ProfsPerc
head(its2Profs)
colnames(its2Profs)
###############################ITS2###################################################
its2Profs = read.csv("mxIts2ProfCounts.csv", header = TRUE, check.names = FALSE)
head(its2Profs)
its2Profs$depth_zone_m = factor(its2Profs$depth_zone_m, levels = c("10", "15", "25", "35"))
levels(its2Profs$depth_zone_m)
its2Profs$site = factor(its2Profs$site, levels(its2Profs$site)[c(1,2)])
its2Profs = its2Profs[order(its2Profs$site, its2Profs$depth_zone_m), ]
head(its2Profs)
its2Profs %>% arrange(site, depth_zone_m, `C3-C21-C3fc-C3an-C65b-C3b-C3bb`,
`C3-C21-C3an-C3fc-C3gz-C3b-C3bb`,
`C3-C3de-C21-C3bb-C3an-C21ae-C65b-C3s`,
`C3-C3fc-C21-C3b-C3an-C3fd-C3bb`,
`C3-C3de-C3bb-C21ae-C21-C3an-C3s`,
`C3-C3an-C3de-C21-C3bb-C3fc-C3b`,
`C3-C21-C3gu-C3gy-C3gw-C3gx-C3gv-C3b`,
`C3an/C3-C21-C3bb`,
`C3-C3fc-C40g-C3b-C3an-C21-C3fd-C3s-C3bb`,
`C3/C3b`,
`G3b`,
`G3am`)
sampleCounts = plyr::count(its2Profs, c('site','depth_zone_m'))
meltedList = reshape2::melt(lapply(sampleCounts$freq,function(x){c(1:x)}))
its2Profs$barPlotOrder = meltedList$value
its2Profs=its2Profs[c(1,ncol(its2Profs),2:(ncol(its2Profs)-1))]
its2ProfsTransposed = t(its2Profs[, 10:length(its2Profs[1, ])])
its2ProfsList = DGEList(counts = its2ProfsTransposed)
head(its2ProfsList$samples)
its2ProfsNorm =  calcNormFactors(its2ProfsList, method = "TMM")
head(its2ProfsNorm$samples)
its2TMM = t(cpm(its2ProfsNorm, normalized.lib.sizes = TRUE))
its2ProfsNorm = cbind(its2Profs[,c(1:9)], its2TMM)
#Prepping for bar plot
colOrder2 = order(colSums(its2ProfsNorm[10:length(its2ProfsNorm[1,])]), decreasing = TRUE)+9 #Add the number of columns of metadata
its2ProfsPerc = cbind(its2ProfsNorm[,c(1:9)],its2ProfsNorm[,c(colOrder2)])
its2ProfsPerc$sum = apply(its2ProfsPerc[, c(10:length(its2ProfsPerc[1,]))], 1, function(x) {
sum(x, na.rm = T)
})
its2ProfsPerc = cbind(its2ProfsPerc[, c(1:9)], (its2ProfsPerc[, c(10:(ncol(its2ProfsPerc)-1))]
/ its2ProfsPerc$sum))
head(its2ProfsPerc)
apply(its2ProfsPerc[, c(10:(ncol(its2ProfsPerc)))], 1, function(x) {
sum(x, na.rm = T)
})
head(its2ProfsPerc)
gssProf = otuStack(its2ProfsPerc, count.columns = c(10:length(its2ProfsPerc[1, ])),
condition.columns = c(1:9)) # remove summ rows
gssProf = gssProf %>% filter(otu != "summ") %>% droplevels()
levels(gssProf$otu)
levels(gssProf$depth_zone_m)
levels(gssProf$depth_zone_m) = c("10 m", "15 m", "25 m", "35 m")
levels(gssProf$site)
levels(gssProf$site) = c("Alacranes", "Bajos del Norte")
levels(gssProf$depth_zone_m)
levels(gssProf$site)
its2ProfsPlotA = ggplot(gssProf, aes(x = barPlotOrder, y = count, fill = factor(otu))) +
geom_bar(position = "stack", stat = "identity", color = "black", size = 0.25) +
ylab("Proportion") +
scale_fill_paletteer_d("dichromat::BrowntoBlue.12")+
labs(fill = expression(paste(italic("ITS2"), " type profile"))) +
guides(fill = guide_legend(ncol = 2, reverse = FALSE)) +
facet_grid(depth_zone_m ~ site, scales = "free_x") + #faceting plots by Depth and Site
theme_bw()
its2ProfsPlot = its2ProfsPlotA +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom",
legend.title = element_text(color = "black", size = 12, hjust = 0.5, angle = 90),
legend.text = element_text(color = "black", size = 10),
legend.key = element_blank(),
legend.key.size = unit(0.75,"line"),
legend.background = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_blank(),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12),
strip.background = element_rect(fill = "white", size = 0.9)
)
its2ProfsPlot
head(its2Profs)
head(gssProf)
gssProf %>% arrange(site, depth_zone_m, count, otu)
its2ProfsPlotA = ggplot(gssProf, aes(x = barPlotOrder, y = count, fill = factor(otu))) +
geom_bar(position = "stack", stat = "identity", color = "black", size = 0.25) +
ylab("Proportion") +
scale_fill_paletteer_d("dichromat::BrowntoBlue.12")+
labs(fill = expression(paste(italic("ITS2"), " type profile"))) +
guides(fill = guide_legend(ncol = 2, reverse = FALSE)) +
facet_grid(depth_zone_m ~ site, scales = "free_x") + #faceting plots by Depth and Site
theme_bw()
its2ProfsPlot = its2ProfsPlotA +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom",
legend.title = element_text(color = "black", size = 12, hjust = 0.5, angle = 90),
legend.text = element_text(color = "black", size = 10),
legend.key = element_blank(),
legend.key.size = unit(0.75,"line"),
legend.background = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_blank(),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12),
strip.background = element_rect(fill = "white", size = 0.9)
)
its2ProfsPlot
gssProf %>% arrange(site, depth_zone_m, otu)
its2ProfsPlotA = ggplot(gssProf, aes(x = barPlotOrder, y = count, fill = factor(otu))) +
geom_bar(position = "stack", stat = "identity", color = "black", size = 0.25) +
ylab("Proportion") +
scale_fill_paletteer_d("dichromat::BrowntoBlue.12")+
labs(fill = expression(paste(italic("ITS2"), " type profile"))) +
guides(fill = guide_legend(ncol = 2, reverse = FALSE)) +
facet_grid(depth_zone_m ~ site, scales = "free_x") + #faceting plots by Depth and Site
theme_bw()
its2ProfsPlot = its2ProfsPlotA +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom",
legend.title = element_text(color = "black", size = 12, hjust = 0.5, angle = 90),
legend.text = element_text(color = "black", size = 10),
legend.key = element_blank(),
legend.key.size = unit(0.75,"line"),
legend.background = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_blank(),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12),
strip.background = element_rect(fill = "white", size = 0.9)
)
its2ProfsPlot
its2ProfsPlot
its2ProfsPlotA = ggplot(gssProf, aes(x = barPlotOrder, y = count, fill = factor(otu))) +
geom_bar(position = "stack", stat = "identity", color = "black", size = 0.25) +
ylab("Proportion") +
scale_fill_paletteer_d("ggsci::default_gsea")+
labs(fill = expression(paste(italic("ITS2"), " type profile"))) +
guides(fill = guide_legend(ncol = 2, reverse = FALSE)) +
facet_grid(depth_zone_m ~ site, scales = "free_x") + #faceting plots by Depth and Site
theme_bw()
its2ProfsPlot = its2ProfsPlotA +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(color = "black", size = 12),
axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom",
legend.title = element_text(color = "black", size = 12, hjust = 0.5, angle = 90),
legend.text = element_text(color = "black", size = 10),
legend.key = element_blank(),
legend.key.size = unit(0.75,"line"),
legend.background = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_blank(),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12),
strip.background = element_rect(fill = "white", size = 0.9)
)
its2ProfsPlot
ggsave("its2ProfsPlot.png", plot = its2ProfsPlot, width = 8.5, height = 10, unit = "in", dpi = 600)
ggsave("its2ProfsPlot.png", plot = its2ProfsPlot, width = 8.5, height = 8.5, unit = "in", dpi = 600)
source("visFuns.R")
source("visFuns.R")
setwd("/Users/student/Documents/GitHub/floridaKeysMcavSnp/data")
source("visFuns.R")
source("visFuns.R")
# read population labels and estimated admixture proportions
pop<-read.table("bspops.txt",as.is=T)
q<-read.table("fkMcavNoClones_k2.qopt")
head(q)
q<-read.table("fkMcavNoClones_k2.qopt")
# order according to population and plot the NGSadmix reults
ord<-orderInds(pop = as.vector(pop[1,]), q = q)
barplot(t(q)[,ord],col=2:10,space=0,border=NA,xlab="Individuals",ylab="Demo2 Admixture proportions for K=3")
text(tapply(1:nrow(pop),pop[ord,1],mean),-0.05,unique(pop[ord,1]),xpd=T)
abline(v=cumsum(sapply(unique(pop[ord,1]),function(x){sum(pop[ord,1]==x)})),col=1,lwd=1.2)
# order according to population and plot the NGSadmix reults
ord<-orderInds(pop = as.vector(pop[1,]), q = q)
barplot(t(q)[,ord],col=2:10,space=0,border=NA,xlab="Individuals",ylab="Demo2 Admixture proportions for K=3")
text(tapply(1:nrow(pop),pop[ord,1],mean),-0.05,unique(pop[ord,1]),xpd=T)
abline(v=cumsum(sapply(unique(pop[ord,1]),function(x){sum(pop[ord,1]==x)})),col=1,lwd=1.2)
r<-read.table("output.corres.txt")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, fig.align = 'left')
knitr::opts_knit$set(root.dir = '../revisedData')
options(width = 88, scipen = 4)
getwd()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, fig.align = 'left')
knitr::opts_knit$set(root.dir = '../revisedData')
options(width = 88, scipen = 4)
getwd()
setwd('../revisedData')
getwd()
title: "Population genetic structure of shallow and mesophotic *Montastraea cavernosa* in the Florida Keys"
author: "Alexis Sturm -- lexie.sturm@gmail.com and Ryan Eckert-- ryan.j.eckert@gmail.com"
date: "7/29/2020"
output:
html_document:
theme: flatly
toc: yes
toc_depth: 4
toc_float: yes
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, fig.align = 'left')
knitr::opts_knit$set(root.dir = '../revisedData')
options(width = 88, scipen = 4)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, fig.align = 'left')
knitr::opts_knit$set(root.dir = '../revisedData')
options(width = 88, scipen = 4)
getwd()
